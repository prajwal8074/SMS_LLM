name: Python Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r AWS/requirements.txt

    - name: Start Marketplace backend
      run: |
        cd AWS/MarketPlace/backend
        docker compose up -d

    - name: List running containers (initial check)
        run: |
          docker ps

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Attempting to connect to PostgreSQL..."
        for i in $(seq 1 10); do
          nc -z localhost 5432 && echo "PostgreSQL is ready!" && break
          echo "Waiting for PostgreSQL... ($i/10)"
          sleep 3
        done
        nc -z localhost 5432 || (echo "PostgreSQL did not become ready after waiting." && exit 1)

    - name: Health Check using /get_all_listings
      run: |
        echo "Check /get_all_listings..."
        for i in $(seq 1 30); do
          RESPONSE=$(curl -s -w "%{http_code}" -f http://localhost:5000/get_all_listings)
          HTTP_CODE="${RESPONSE: -3}"
          BODY="${RESPONSE::-3}"

          if [[ "$HTTP_CODE" == "200" ]]; then
            echo "Flask app is ready and /get_all_listings returned 200 OK!"
            break
          fi
          echo "Waiting for Flask app /get_all_listings... (Attempt $i/30, HTTP Code: $HTTP_CODE)"
          sleep 3
        done

    - name: Run tests
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        python AWS/Test/function_calling_test.py

    - name: Stop Marketplace backend
      run: |
        cd AWS/MarketPlace/backend
        docker compose down
        sudo systemctl stop postgresql
